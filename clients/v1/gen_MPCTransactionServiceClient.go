// Code generated by ifacemaker. DO NOT EDIT.

package v1

import (
	"context"

	"cloud.google.com/go/longrunning/autogen/longrunningpb"
	mpc_transactionspb "github.com/coinbase/waas-client-library-go/gen/go/coinbase/cloud/mpc_transactions/v1"
	"github.com/googleapis/gax-go/v2"
	"google.golang.org/grpc"
)

// MPCTransactionServiceClient is a generated interface for mpctransaction protoc-gen-go_gapic client mpcTransactionServiceClient.
type MPCTransactionServiceClient interface {
	// Close closes the connection to the API service. The user should invoke this when
	// the client is no longer required.
	Close() error
	// Connection returns a connection to the API service.
	//
	// Deprecated: Connections are now pooled so this method does not always
	// return the same resource.
	Connection() *grpc.ClientConn
	// GetOperation gets the latest state of a long-running operation.
	GetOperation(ctx context.Context, req *longrunningpb.GetOperationRequest, opts ...gax.CallOption) (*longrunningpb.Operation, error)
	// CreateMPCTransaction creates an MPCTransaction. The long-running operation returned from this API will contain
	// information about the state of the MPCTransaction that can be used to complete the operation.
	// The LRO will be considered Done once the MPCTransaction reaches a state of CONFIRMING (i.e.
	// broadcast on-chain). See the MPCTransaction documentation for its lifecycle.
	CreateMPCTransaction(ctx context.Context, req *mpc_transactionspb.CreateMPCTransactionRequest, opts ...gax.CallOption) (ClientWrappedCreateMPCTransactionOperation, error)
	// CreateMPCTransactionOperation returns the CreateMPCTransactionOperation indicated by the given name.
	CreateMPCTransactionOperation(name string) ClientWrappedCreateMPCTransactionOperation
	// GetMPCTransaction gets an MPCTransaction. There can be a delay between when
	// CreateMPCTransaction is called and when this API will begin returning an
	// MPCTransaction in the CREATED state.
	GetMPCTransaction(ctx context.Context, req *mpc_transactionspb.GetMPCTransactionRequest, opts ...gax.CallOption) (*mpc_transactionspb.MPCTransaction, error)
	// ListMPCTransactions lists MPCTransactions.
	ListMPCTransactions(ctx context.Context, req *mpc_transactionspb.ListMPCTransactionsRequest, opts ...gax.CallOption) MPCTransactionIterator
}
