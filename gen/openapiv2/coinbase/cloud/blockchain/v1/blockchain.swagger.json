{
  "swagger": "2.0",
  "info": {
    "title": "Blockchain API",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "BlockchainService",
      "description": "A service providing a set of read-only APIs for information about the blockchain networks that WaaS supports. Users can query BlockchainService to figure out the Networks and Assets that can be transacted with using WaaS APIs."
    }
  ],
  "host": "https://api.developer.coinbase.com/waas/blockchain",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/networks": {
      "get": {
        "summary": "ListNetworks",
        "description": "Returns the list of Networks available for use.",
        "operationId": "BlockchainService_ListNetworks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListNetworksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "The maximum number of Networks to return. The default is 50.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous ListNetworks call.\nProvide this to retrieve the subsequent page.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BlockchainService"
        ]
      }
    },
    "/v1/{assetName}": {
      "get": {
        "summary": "GetAsset",
        "description": "Retrieves an Asset by resource name.",
        "operationId": "BlockchainService_GetAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Asset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "assetName",
            "description": "The resource name of the Asset.\nFormat: networks/{network_id}/assets/{asset_id}.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "networks/[^/]+/assets/[^/]+"
          }
        ],
        "tags": [
          "BlockchainService"
        ]
      }
    },
    "/v1/{networkName}": {
      "get": {
        "summary": "GetNetwork",
        "description": "Retrieves a Network by resource name.",
        "operationId": "BlockchainService_GetNetwork",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Network"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "networkName",
            "description": "The resource name of the Network.\nFormat: networks/{network_id}.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "networks/[^/]+"
          }
        ],
        "tags": [
          "BlockchainService"
        ]
      }
    },
    "/v1/{networkName}/assets": {
      "get": {
        "summary": "ListAssets",
        "description": "Returns a list of Assets available on a given Network.",
        "operationId": "BlockchainService_ListAssets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAssetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "networkName",
            "description": "The resource name of the parent Network.\nFormat: networks/{network_id}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "networks/[^/]+"
          },
          {
            "name": "pageSize",
            "description": "The maximum number of Assets to return. The default is 50.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous ListAssets call.\nProvide this to retrieve the subsequent page.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "A filter string which conforms to https://google.aip.dev/160.\nSupported queries include any conjunction of the following:\n1. definition.asset_type (= | !=) \"{asset_type}\"\n2. definition.asset_group_id (= | !=) \"{asset_group_id}\"\n3. definition.sub_group_id (= | !=) \"{sub_group_id}\"",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BlockchainService"
        ]
      }
    }
  },
  "definitions": {
    "AssetDefinition": {
      "type": "object",
      "properties": {
        "assetType": {
          "type": "string",
          "example": "native",
          "description": "The type of Asset the definition describes.\nPossible values: 'native', 'erc20', 'erc721', 'erc1155'",
          "title": "assetType"
        },
        "assetGroupId": {
          "type": "string",
          "example": "0x887CFe31C888EE0780795b7feFF46CE7f9AB556C",
          "description": "The identifier that distinguishes this Asset group.\nGenerally a 0x-prefixed contract address for the Asset. For a native Asset this is not set.",
          "title": "assetGroupId"
        },
        "subGroupId": {
          "type": "string",
          "description": "The identifier that distinguishes the specific Asset within the asset group.\nGenerally a token ID. For a native Asset or ERC-20 this is not set.",
          "title": "subGroupId"
        }
      },
      "description": "The defining characteristics that combine to uniquely identify an Asset on-chain.\nFungible tokens, such as ERC-20s, require an asset_group_id (the contract address).\nNon-fungible tokens and multi-token assets such as ERC-721s and ERC-1155s require a both an asset_group_id and a sub_group_id (the token ID).",
      "title": "Asset.Definition"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Asset": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "networks/ethereum-goerli/assets/0c3569d3-b253-5128-a229-543e1e819430",
          "description": "The resource name of the Asset.\nFormat: networks/{network_id}/assets/{asset_id}",
          "title": "name"
        },
        "advertisedSymbol": {
          "type": "string",
          "example": "ETH",
          "description": "The symbol representation of this asset (e.g. ETH) as advertised by the Network.\nFor a native Asset this may be implicit, e.g., the on-chain data may not include any symbol reference.\nFor some protocols there can be Assets with arbitrary symbols that are not globally unique, and it should not be trusted to represent a canonical symbol/ticker.",
          "title": "advertisedSymbol"
        },
        "decimals": {
          "type": "integer",
          "format": "int32",
          "example": "18",
          "description": "The number of decimals the Asset uses.\nNote: in some instances this value can change over time.",
          "title": "decimals"
        },
        "definition": {
          "$ref": "#/definitions/AssetDefinition",
          "description": "The Asset's definition.",
          "title": "definition"
        }
      },
      "description": "The Asset resource, which represents an on-chain asset.\nFor fungible assets, one resource exists per Asset.\nIn the case of non-fungible tokens, a unique Asset entry exists for every token.",
      "title": "Asset"
    },
    "v1ListAssetsResponse": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Asset"
          },
          "description": "The list of Assets."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as page_token to retrieve the next page.\nIf this field is omitted, there are no subsequent pages."
        }
      },
      "description": "The response message for ListAssets.",
      "title": "ListAssetsResponse"
    },
    "v1ListNetworksResponse": {
      "type": "object",
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Network"
          },
          "description": "The list of Networks."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as page_token to retrieve the next page.\nIf this field is omitted, there are no subsequent pages."
        }
      },
      "description": "The response message for ListNetworks.",
      "title": "ListNetworksResponse"
    },
    "v1Network": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "networks/ethereum-goerli",
          "description": "The resource name of the Network.\nFormat: networks/{network_id}",
          "title": "name"
        },
        "displayName": {
          "type": "string",
          "example": "Goerli Ethereum Testnet",
          "description": "A user-readable name for the Network.",
          "title": "displayName"
        },
        "nativeAsset": {
          "type": "string",
          "example": "networks/ethereum-goerli/assets/0c3569d3-b253-5128-a229-543e1e819430",
          "description": "The native Asset for this Network.\nFormat: networks/{network_id}/assets/{asset_id}",
          "title": "nativeAsset"
        },
        "protocolFamily": {
          "type": "string",
          "example": "protocolFamilies/evm",
          "description": "The protocol family this Network is a part of.\nToday, the only supported value is 'protocolFamilies/evm'.",
          "title": "protocolFamily"
        },
        "type": {
          "$ref": "#/definitions/v1NetworkType",
          "example": "TESTNET",
          "description": "The type of Network.",
          "title": "type"
        }
      },
      "description": "The Network resource, which represents a blockchain network.",
      "title": "Network"
    },
    "v1NetworkType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "MAINNET",
        "TESTNET"
      ],
      "default": "TYPE_UNSPECIFIED",
      "description": "The type of Network.\n\n - TYPE_UNSPECIFIED: The default unused value.\n - MAINNET: A mainnet Network, storing real funds.\n - TESTNET: A testnet Network, used for testing."
    }
  }
}
